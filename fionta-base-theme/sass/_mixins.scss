// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Clearfix
@mixin clearfix {
  &:after{
    content: "";
    display: table;
    clear: both;
  }
}

// flexbox declaration
@mixin flex {
  display: -webkit-flex;
  display: flex;
}

// smaller width gutters
@mixin gutters {
	@media screen and (max-width: 768px) {
		padding-left: 4rem;
		padding-right: 4rem;
	}
	@media screen and (max-width: 480px) {
		padding-left: 2rem;
		padding-right: 2rem;
	}
}
// most common max-width

@mixin max-width {
	max-width: 1052px;
	margin: 0 auto;
	@media screen and (max-width: 1172px) {
		padding-left: 6rem;
		padding-right: 6rem;
	}
	@include gutters;
}